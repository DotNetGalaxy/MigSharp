<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>MigSharp</id>
    <version>2.3.1</version>
    <title>Mig#</title>
    <authors>dradovic</authors>
    <owners />
    <licenseUrl>https://github.com/dradovic/MigSharp/blob/master/LICENSE.txt</licenseUrl>
    <projectUrl>https://github.com/dradovic/MigSharp</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Write database migrations and/or schema modifications in your favorite .NET language and let Mig# generate the platform-dependent SQL code and update your schema. Features: fluent interface, automatic versioning, multi-module support, scripting to SQL files, validation framework for portability issues, suport for SQL Server, Oracle, Teradata, SQLite, legacy integration</description>
    <summary>A .NET framework for multi-database platform migrations, versioning and schema modifications</summary>
    <tags>mig# migsharp migration database platform agnostic fluent schema versioning sql server generator oracle teradata sqlite</tags>
    <releaseNotes>
2.3.1
- added support for row-version columns (new .WithRowVersionColumn(columnName) method)
- added support for ON DELETE CASCADE (new .CascadeOnDelete() method on foreign keys) (thanks to Marko Binic)
- new console application that generates a migration from an existing SQL Server database schema (Generate.exe)
BUG FIXES:
  - removed experimental MySql from the default list of supported providers
2.3.0
- new DropIfExists method on tables
- DateTime2 columns respects OfSize parameter (#50)
- added scripting support for DateTime2
- Scripting a DateTime or DateTime2 value includes 3 digits of miliseconds according to ISO 8601 with a dot as a decimal mark
- Error log contains exact information about the failed migration.
BREAKING CHANGES:
  - Change of DataType class: size and precision are now nullable:
    -> the 'scale' parameter of the 'OfSize' methods is nullable
    -> a size equal to 0 means 'is set to zero' now
    -> validation messages might contain the string 'null' (where they had '0')
BUG FIXES:
  - SQL Server Providers: use 'tinyint' for DbType.Byte (instead of 'smallint')
2.2.0 
- Added possibility to execute a migration without versioning it (useful for dynamical schema changes)
2.1.0 
- Added support for custom timestamp formats (see Wiki on how to use this feature) (thanks to richardprior)
- Added support for custom DB connections which is needed for SQLite in-memory databases (thanks to jvandertil)
- Added support for SQL Server 2012 (2.0.0 was already compatible but we've added an official provider now)
2.0.0 
- Added support for SQL Server CE 3.5 (thanks to balistof)
- Duplicate migration exports are detected before actual migration execution
- API:
- IMigrationBatch now lists:
- migrations scheduled for execution
- migrations executed server-side but unknown to the application (used to detect if an application is out-of-date)
- Removed Migrator.IsUpToDate as it is ambiguous and incurs an extra round-trip to the database (use FetchMigrations instead)
- IVersioning: implementors need to return all executed migrations instead of answering Contains(...)
- IVersioning and MigrationEventArgs: use the new IScheduledMigrationMetadata interface which contains the direction
- BUG FIXES:
  - SQL Server 2005/2008:
    - before dropping a column, drop its default constraint (if exists) (thanks to rmotyka)
    - SQL Server CE 4:
    - allow GUIDs to be used as primary keys (thanks to lestermat)
  - Teradata:
    - stop creating *_0 tables when adding foreign keys
1.1.0
- Added support for SQLite (without foreign keys)
- Added support for SQL scripting: instead of executing migrations against a database, they can be scripted into files
- Added command-line interface: Migrate.exe, a console application
- Added support for retrieving migrations from multiple assemblies (thanks to FlorianHoornaar)
- Extended/completed list of allowed primary key data types for all providers
- Providers define themselves which data-types can be used for identity columns
- this allows to use decimals without scale for SQL Server, Oracle, and Teradata
- Extended API to allow renaming of primary keys
- Removed .AsIdentity() option when adding columns (was not implemented consistently and was missing integration testing and constitues a super special-case which is hard to implement consistently for all platforms)
- IProvider: added the DropDefault method which replaces the AddedColumn.DropThereafter and gives the providers more flexibility to report what they support and what not
- Teradata: raise validation error on adding/dropping primary keys (Teradata does not support that)
1.0.2 
- BUG FIXES:
  - SQL Server 2005/2008:
    - rename default constraint along with the column (fixes the case when adding a new column with a default value which has the same name of a previously renamed column with a default value)
  - Oracle:
    - rename identity sequence and trigger along with the table
  - Teradata:
    - escape new name when renaming a table
    - removed MINVALUE and MAXVALUE for identity columns which is not needed and caused unexpected errors
1.0.1 
- BUG FIXES:
  - Oracle: multiple Mig# instances can be maintained side-by-side on the same database
  - SQL Tracing: do not throw if the emitted SQL contains curly brackets
1.0.0
- Initial release

Note: Mig# uses "Semantic Versioning" http://semver.org/ (by Tom Preston-Werner)
    </releaseNotes>
  </metadata>
  <files>
    <file src="..\bin\Release35\MigSharp.dll" target="lib\net35" />
    <file src="..\bin\Release35\MigSharp.xml" target="lib\net35" />
    <file src="..\bin\Release40\MigSharp.dll" target="lib\net40" />
    <file src="..\bin\Release40\MigSharp.xml" target="lib\net40" />
    <file src="..\bin\Release35\Migrate.exe" target="tools\net35" />
    <file src="..\bin\Release35\Migrate.exe.config" target="tools\net35" />
    <file src="..\bin\Release40\Migrate.exe" target="tools\net40" />
    <file src="..\bin\Release40\Migrate.exe.config" target="tools\net40" />
    <file src="..\bin\Release35\Generate.exe" target="tools\net35" />
    <file src="..\bin\Release35\Generate.exe.config" target="tools\net35" />
    <file src="..\bin\Release40\Generate.exe" target="tools\net40" />
    <file src="..\bin\Release40\Generate.exe.config" target="tools\net40" />
  </files>
</package>